// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UIJobsAPI.Data;


#nullable disable

namespace UijobsApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UijobsApi.Models.Beneficio", b =>
                {
                    b.Property<int>("idBeneficio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idBeneficio"));

                    b.Property<string>("nomeBeneficio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idBeneficio");

                    b.ToTable("Beneficios");

                    b.HasData(
                        new
                        {
                            idBeneficio = 1,
                            nomeBeneficio = "Plano de Saude"
                        },
                        new
                        {
                            idBeneficio = 2,
                            nomeBeneficio = "Academia"
                        },
                        new
                        {
                            idBeneficio = 3,
                            nomeBeneficio = "Meia entrada em cinemas, shows e eventos"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.BeneficioVaga", b =>
                {
                    b.Property<int>("idBeneficio")
                        .HasColumnType("int");

                    b.Property<string>("idVagas")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("BeneficiosVagas");
                });

            modelBuilder.Entity("UijobsApi.Models.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMae")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Candidatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CEP = "02124050",
                            Email = "yago.pereira7@etec.sp.gov.br",
                            Nome = "Yago",
                            NomeMae = "Elaine"
                        },
                        new
                        {
                            Id = 2,
                            CEP = "02124040",
                            Email = "Daniel@etec.sp.gov.br",
                            Nome = "Daniel",
                            NomeMae = "Maria"
                        },
                        new
                        {
                            Id = 3,
                            CEP = "02179010",
                            Email = "Lara@etec.sp.gov.br",
                            Nome = "Lara",
                            NomeMae = "Maria Beatriz"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.CarreiraProfissional", b =>
                {
                    b.Property<int>("sqCarreiraProfissional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sqCarreiraProfissional"));

                    b.Property<string>("cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tempo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sqCarreiraProfissional");

                    b.ToTable("CarreirasProfissionais");

                    b.HasData(
                        new
                        {
                            sqCarreiraProfissional = 1,
                            cargo = "NULO",
                            nomeEmpresa = "NULO",
                            tempo = "NULO"
                        },
                        new
                        {
                            sqCarreiraProfissional = 2,
                            cargo = "Vendedor",
                            nomeEmpresa = "Onix Rolamentos",
                            tempo = "2 anos"
                        },
                        new
                        {
                            sqCarreiraProfissional = 3,
                            cargo = "Contador",
                            nomeEmpresa = "Contabilidade Arujo",
                            tempo = "6 meses"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.Conhecimento", b =>
                {
                    b.Property<int>("ConhecimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConhecimentoId"));

                    b.Property<string>("nomeConhecimento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConhecimentoId");

                    b.ToTable("Conhecimentos");

                    b.HasData(
                        new
                        {
                            ConhecimentoId = 1,
                            nomeConhecimento = "C#"
                        },
                        new
                        {
                            ConhecimentoId = 2,
                            nomeConhecimento = "Angular"
                        },
                        new
                        {
                            ConhecimentoId = 3,
                            nomeConhecimento = "Java"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.ConhecimentoVaga", b =>
                {
                    b.Property<int>("idConhecimento")
                        .HasColumnType("int");

                    b.Property<string>("idNivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idVagas")
                        .HasColumnType("int");

                    b.ToTable("ConhecimentosVagas");
                });

            modelBuilder.Entity("UijobsApi.Models.Curriculo", b =>
                {
                    b.Property<int>("CurriculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurriculoId"));

                    b.Property<int?>("CarreiraProfissionalsqCarreiraProfissional")
                        .HasColumnType("int");

                    b.Property<string>("ConhecimentoId1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormacaoAcademicaidFormacaoAcademica")
                        .HasColumnType("int");

                    b.Property<string>("Objetivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idCarreiraProficional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idFormacaoAcademica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurriculoId");

                    b.HasIndex("CarreiraProfissionalsqCarreiraProfissional");

                    b.HasIndex("FormacaoAcademicaidFormacaoAcademica");

                    b.ToTable("Curriculos");

                    b.HasData(
                        new
                        {
                            CurriculoId = 1,
                            ConhecimentoId1 = "Iniciante",
                            Objetivo = "1emprego",
                            idCarreiraProficional = "nula",
                            idFormacaoAcademica = "TÉCNICO EM ANALISE E DESENVOLVIMENTO DE SISTEMAS"
                        },
                        new
                        {
                            CurriculoId = 2,
                            ConhecimentoId1 = "Intermediario",
                            Objetivo = "OportunidadeArea",
                            idCarreiraProficional = "Vendas",
                            idFormacaoAcademica = "TÉCNICO EM ANALISE E DESENVOLVIMENTO DE SISTEMAS"
                        },
                        new
                        {
                            CurriculoId = 3,
                            ConhecimentoId1 = "Avancado",
                            Objetivo = "MelhorEmprego",
                            idCarreiraProficional = "Programador",
                            idFormacaoAcademica = "TÉCNICO EM ANALISE E DESENVOLVIMENTO DE SISTEMAS"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.Curso", b =>
                {
                    b.Property<int>("idCursos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCursos"));

                    b.Property<string>("nomeCurso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCursos");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            idCursos = 1,
                            nomeCurso = "DS"
                        },
                        new
                        {
                            idCursos = 2,
                            nomeCurso = "DS"
                        },
                        new
                        {
                            idCursos = 3,
                            nomeCurso = "DS"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.CursoVaga", b =>
                {
                    b.Property<int>("idCursos")
                        .HasColumnType("int");

                    b.Property<string>("idCursosVaga")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idVagas")
                        .HasColumnType("int");

                    b.ToTable("CursosVagas");
                });

            modelBuilder.Entity("UijobsApi.Models.Empresa", b =>
                {
                    b.Property<int>("idEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEmpresa"));

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("porte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("qtdFuncionarios")
                        .HasColumnType("int");

                    b.Property<string>("razaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEmpresa");

                    b.ToTable("Empresas");

                    b.HasData(
                        new
                        {
                            idEmpresa = 1,
                            CEP = "02124040",
                            cnpj = "11.111.111/0001-01",
                            nomeSocial = "Santos",
                            porte = "Grande",
                            qtdFuncionarios = 200,
                            razaoSocial = "Santos Futebol Clube"
                        },
                        new
                        {
                            idEmpresa = 2,
                            CEP = "02124050",
                            cnpj = "22.222.222/0002-02",
                            nomeSocial = "Encopel",
                            porte = "Grande",
                            qtdFuncionarios = 100,
                            razaoSocial = "Encopel Rolamentos LTDA"
                        },
                        new
                        {
                            idEmpresa = 3,
                            CEP = "02125030",
                            cnpj = "33.333.333/0003-03",
                            nomeSocial = "MAGAZINE LUIZA",
                            porte = "Grande",
                            qtdFuncionarios = 1000,
                            razaoSocial = "MAGAZINE LUIZA S/A"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.EnderecoCandidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<string>("uf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnderecoCandidatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CEP = "02124050",
                            bairro = "Jardim Japão",
                            cidade = "Sao Paulo",
                            complemento = "1",
                            endereco = "Rua Togo",
                            numero = 426,
                            uf = "sp"
                        },
                        new
                        {
                            Id = 2,
                            CEP = "02124040",
                            bairro = "Jardim Japão",
                            cidade = "Sao Paulo",
                            complemento = "3",
                            endereco = "Rua Osaka",
                            numero = 751,
                            uf = "sp"
                        },
                        new
                        {
                            Id = 3,
                            CEP = "02179010",
                            bairro = "Parque Novo Mundo",
                            cidade = "Sao Paulo",
                            complemento = "34B",
                            endereco = "Rua Sargento",
                            numero = 420,
                            uf = "sp"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.EnderecoEmpresa", b =>
                {
                    b.Property<int>("idEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEndereco"));

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<string>("uf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEndereco");

                    b.ToTable("EnderecoEmpresas");

                    b.HasData(
                        new
                        {
                            idEndereco = 1,
                            CEP = "02124050",
                            bairro = "Jardim Japão",
                            cidade = "Sao Paulo",
                            complemento = "1",
                            endereco = "Rua Kaneda",
                            numero = 426,
                            uf = "sp"
                        },
                        new
                        {
                            idEndereco = 2,
                            CEP = "02124040",
                            bairro = "Jardim Japão",
                            cidade = "Sao Paulo",
                            complemento = "3",
                            endereco = "Av Guilherme Couting",
                            numero = 751,
                            uf = "sp"
                        },
                        new
                        {
                            idEndereco = 3,
                            CEP = "02125030",
                            bairro = "Parque Novo Mundo",
                            cidade = "Sao Paulo",
                            complemento = "34B",
                            endereco = "Rua Benedito",
                            numero = 420,
                            uf = "sp"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.FormacaoAcademica", b =>
                {
                    b.Property<int>("idFormacaoAcademica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idFormacaoAcademica"));

                    b.Property<int?>("cursoidCursos")
                        .HasColumnType("int");

                    b.Property<int?>("graduacaoidGraduacao")
                        .HasColumnType("int");

                    b.Property<string>("idCursos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idGraduação")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idiomas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idFormacaoAcademica");

                    b.HasIndex("cursoidCursos");

                    b.HasIndex("graduacaoidGraduacao");

                    b.ToTable("FormacoesAcademicas");

                    b.HasData(
                        new
                        {
                            idFormacaoAcademica = 1,
                            idCursos = "DS",
                            idGraduação = "MARKETING DIGITAL",
                            idiomas = "Português nativo"
                        },
                        new
                        {
                            idFormacaoAcademica = 2,
                            idCursos = "DS",
                            idGraduação = "Nula",
                            idiomas = "Português nativo, Inglês"
                        },
                        new
                        {
                            idFormacaoAcademica = 3,
                            idCursos = "DS",
                            idGraduação = "ENGENHARIA DE SOFTWARE",
                            idiomas = "Português nativo, Ingles"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.Graduacao", b =>
                {
                    b.Property<int>("idGraduacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idGraduacao"));

                    b.Property<string>("fimGraduacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inicioGraduacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeGraduacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idGraduacao");

                    b.ToTable("Graduacoes");

                    b.HasData(
                        new
                        {
                            idGraduacao = 1,
                            fimGraduacao = "12/2026",
                            inicioGraduacao = "02/2024",
                            nomeGraduacao = "MARKETING DIGITAL"
                        },
                        new
                        {
                            idGraduacao = 2,
                            fimGraduacao = "00/0000",
                            inicioGraduacao = "00/0000",
                            nomeGraduacao = "NULA"
                        },
                        new
                        {
                            idGraduacao = 3,
                            fimGraduacao = "12/2025",
                            inicioGraduacao = "02/2020",
                            nomeGraduacao = "ENGENHARIA DE SOFTWARE"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.Nivel", b =>
                {
                    b.Property<int>("idNivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idNivel"));

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idNivel");

                    b.ToTable("Niveis");

                    b.HasData(
                        new
                        {
                            idNivel = 1,
                            descricao = "Iniciando minhas habilidades"
                        },
                        new
                        {
                            idNivel = 2,
                            descricao = "Tenho noção e alguns projetos na linguagem citada"
                        },
                        new
                        {
                            idNivel = 3,
                            descricao = "Dominio na linguagem citada"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.Porte", b =>
                {
                    b.Property<int>("idPorte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPorte"));

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPorte");

                    b.ToTable("Portes");

                    b.HasData(
                        new
                        {
                            idPorte = 1,
                            descricao = "xxxxxx"
                        },
                        new
                        {
                            idPorte = 2,
                            descricao = "yyyyyy"
                        },
                        new
                        {
                            idPorte = 3,
                            descricao = "zzzzzz"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.SituacaoVaga", b =>
                {
                    b.Property<int>("idSituacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idSituacao"));

                    b.Property<string>("descricaoSituacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idSituacao");

                    b.ToTable("SituacoesVagas");

                    b.HasData(
                        new
                        {
                            idSituacao = 1,
                            descricaoSituacao = "xxxxx"
                        },
                        new
                        {
                            idSituacao = 2,
                            descricaoSituacao = "yyyyy"
                        },
                        new
                        {
                            idSituacao = 3,
                            descricaoSituacao = "zzzzz"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.Vaga", b =>
                {
                    b.Property<int>("idVagas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idVagas"));

                    b.Property<int>("cargaHoraria")
                        .HasColumnType("int");

                    b.Property<string>("cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("finalVifencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("inicioVigencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("percAderencia")
                        .HasColumnType("int");

                    b.Property<string>("salario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("situacaoVaga")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idVagas");

                    b.ToTable("Vagas");

                    b.HasData(
                        new
                        {
                            idVagas = 1,
                            cargaHoraria = 9,
                            cargo = "Analista de Sistemas",
                            descricao = "xxxxx",
                            finalVifencia = "02/12/2024",
                            idEmpresa = 1,
                            inicioVigencia = "02/02/2024",
                            localidade = "SP",
                            percAderencia = 10,
                            salario = "R$2500",
                            situacaoVaga = "Ativa"
                        },
                        new
                        {
                            idVagas = 2,
                            cargaHoraria = 9,
                            cargo = "Desenvolvedor FrontEnd",
                            descricao = "yyyyy",
                            finalVifencia = "03/12/2024",
                            idEmpresa = 2,
                            inicioVigencia = "03/03/2024",
                            localidade = "SP",
                            percAderencia = 8,
                            salario = "R$3000",
                            situacaoVaga = "Ativa"
                        },
                        new
                        {
                            idVagas = 3,
                            cargaHoraria = 9,
                            cargo = "Programador c#",
                            descricao = "zzzzz",
                            finalVifencia = "04/12/2024",
                            idEmpresa = 3,
                            inicioVigencia = "04/04/2024",
                            localidade = "SP",
                            percAderencia = 7,
                            salario = "R$3500",
                            situacaoVaga = "Ativa"
                        });
                });

            modelBuilder.Entity("UijobsApi.Models.Curriculo", b =>
                {
                    b.HasOne("UijobsApi.Models.CarreiraProfissional", "CarreiraProfissional")
                        .WithMany()
                        .HasForeignKey("CarreiraProfissionalsqCarreiraProfissional");

                    b.HasOne("UijobsApi.Models.FormacaoAcademica", "FormacaoAcademica")
                        .WithMany()
                        .HasForeignKey("FormacaoAcademicaidFormacaoAcademica");

                    b.Navigation("CarreiraProfissional");

                    b.Navigation("FormacaoAcademica");
                });

            modelBuilder.Entity("UijobsApi.Models.FormacaoAcademica", b =>
                {
                    b.HasOne("UijobsApi.Models.Curso", "curso")
                        .WithMany()
                        .HasForeignKey("cursoidCursos");

                    b.HasOne("UijobsApi.Models.Graduacao", "graduacao")
                        .WithMany()
                        .HasForeignKey("graduacaoidGraduacao");

                    b.Navigation("curso");

                    b.Navigation("graduacao");
                });
#pragma warning restore 612, 618
        }
    }
}
